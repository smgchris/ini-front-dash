{"version":3,"file":"index.js","sources":["../src/imgs/stop.png","../src/imgs/pause.png","../src/imgs/play-button.png","../src/imgs/close.png","../src/components/Recorder.js"],"sourcesContent":["/* loaded by smart-asset */\nexport default require(\"./stop~lbXSmHgG.png\")","/* loaded by smart-asset */\nexport default require(\"./pause~xDleoKju.png\")","/* loaded by smart-asset */\nexport default require(\"./play-button~KMZeLnuO.png\")","/* loaded by smart-asset */\nexport default require(\"./close~bbahVpKh.png\")","import React, { Component } from \"react\";\nimport microphone from './../imgs/microphone.svg';\nimport stopIcon from './../imgs/stop.png';\nimport pauseIcons from './../imgs/pause.png';\nimport playIcons from './../imgs/play-button.png';\nimport closeIcons from './../imgs/close.png';\nimport styles from '../styles.module.css';\nconst audioType = \"audio/*\";\n\nclass Recorder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      seconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  handleAudioPause(e) {\n    e.preventDefault();\n    clearInterval(this.timer);\n    this.mediaRecorder.pause();\n    this.setState({ pauseRecord: true });\n  }\n  handleAudioStart(e) {\n    e.preventDefault();\n    this.startTimer();\n    this.mediaRecorder.resume();\n    this.setState({ pauseRecord: false });\n  }\n\n  startTimer() {\n    //if (this.timer === 0 && this.state.seconds > 0) {\n    this.timer = setInterval(this.countDown, 1000);\n    //}\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds + 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds\n    });\n  }\n\n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds\n    };\n    return obj;\n  }\n\n  async componentDidMount() {\n//     console.log(navigator.mediaDevices);\n    navigator.getUserMedia =\n      navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia ||\n      navigator.msGetUserMedia;\n    if (navigator.mediaDevices) {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      this.mediaRecorder = new MediaRecorder(stream);\n      this.chunks = [];\n      this.mediaRecorder.ondataavailable = e => {\n        if (e.data && e.data.size > 0) {\n          this.chunks.push(e.data);\n        }\n      };\n    } else {\n      this.setState({ medianotFound: true });\n      console.log(\"Media Decives will work only with SSL.....\");\n    }\n  }\n\n  startRecording(e) {\n    e.preventDefault();\n    // wipe old data chunks\n    this.chunks = [];\n    // start recorder with 10ms buffer\n    this.mediaRecorder.start(10);\n    this.startTimer();\n    // say that we're recording\n    this.setState({ recording: true });\n  }\n\n  stopRecording(e) {\n    clearInterval(this.timer);\n    this.setState({ time: {} });\n    e.preventDefault();\n    // stop the recorder\n    this.mediaRecorder.stop();\n    // say that we're not recording\n    this.setState({ recording: false, pauseRecord: false, });\n    // save the video to memory\n    this.saveAudio();\n  }\n\n  handleReset(e) {\n    if (this.state.recording) {\n      this.stopRecording(e);\n    }\n    this.setState({\n      time: {},\n      seconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    }, () => {\n\n      this.props.handleReset(this.state);\n    });\n\n  }\n\n  saveAudio() {\n    // convert saved chunks to blob\n    const blob = new Blob(this.chunks, { type: audioType });\n    // generate video url from blob\n    const audioURL = window.URL.createObjectURL(blob);\n    // append videoURL to list of saved videos for rendering\n    const audios = [audioURL];\n    this.setState({ audios, audioBlob: blob });\n    this.props.handleAudioStop({\n      url: audioURL,\n      blob: blob,\n      chunks: this.chunks,\n      duration: this.state.time\n    });\n  }\n\n  render() {\n    const { recording, audios, time, medianotFound, pauseRecord } = this.state;\n    const { showUIAudio, title, audioURL } = this.props;\n    //console.log(microphone)\n    return (\n      <div className={styles.recorder_library_box}>\n        <div className={styles.recorder_box}>\n          <div className={styles.recorder_box_inner}>\n            {!this.props.hideHeader ?\n              <div className={styles.reco_header}>\n                <h2 className={styles.h2}>{title}</h2>\n                <span className={styles.close_icons}>\n\n                  {/* <img src={closeIcons} width={20} height={20} alt=\"Close icons\" /> */}\n                </span>\n              </div> : null}\n            {!medianotFound ? (\n              <div className={styles.record_section}>\n                <div className={styles.btn_wrapper}>\n                  <button\n                    onClick={() =>\n                      this.props.handleAudioUpload(this.state.audioBlob)\n                    }\n                    className={`${styles.btn} ${styles.upload_btn}`}\n                  >\n                    Upload\n                  </button>\n                  <button\n                    onClick={(e) => this.handleReset(e)}\n                    className={`${styles.btn} ${styles.clear_btn}`}\n                  >\n                    Clear\n                  </button>\n                </div>\n                <div className={styles.duration_section}>\n                  <div className={styles.audio_section}>\n                    {audioURL !== null && showUIAudio ? (\n                      <audio controls>\n                        <source src={audios[0]} type=\"audio/ogg\" />\n                        <source src={audios[0]} type=\"audio/mpeg\" />\n                      </audio>\n                    ) : null}\n                  </div>\n                  <div className={styles.duration}>\n                    <span className={styles.mins}>\n                      {time.m !== undefined\n                        ? `${time.m <= 9 ? \"0\" + time.m : time.m}`\n                        : \"00\"}\n                    </span>\n                    <span className={styles.divider}>:</span>\n                    <span className={styles.secs}>\n                      {time.s !== undefined\n                        ? `${time.s <= 9 ? \"0\" + time.s : time.s}`\n                        : \"00\"}\n                    </span>\n                  </div>\n                  {!recording ? (\n                    <p className={styles.help}>Press the microphone to record</p>\n                  ) : null}\n                </div>\n                {!recording ? (\n                  <a\n                    onClick={e => this.startRecording(e)}\n                    href=\" #\"\n                    className={styles.mic_icon}\n                  >\n                    {/* <img src={microphone} width={30} height={30} alt=\"Microphone icons\" /> */}\n                    <span className={styles.microphone_icon_sec}>\n                      <svg className={styles.mic_icon_svg}  version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\" enableBackground=\"new 0 0 1000 1000\" >\n                        <g>\n                          <path d=\"M500,683.8c84.6,0,153.1-68.6,153.1-153.1V163.1C653.1,78.6,584.6,10,500,10c-84.6,0-153.1,68.6-153.1,153.1v367.5C346.9,615.2,415.4,683.8,500,683.8z M714.4,438.8v91.9C714.4,649,618.4,745,500,745c-118.4,0-214.4-96-214.4-214.4v-91.9h-61.3v91.9c0,141.9,107.2,258.7,245,273.9v124.2H346.9V990h306.3v-61.3H530.6V804.5c137.8-15.2,245-132.1,245-273.9v-91.9H714.4z\" />\n                        </g>\n                      </svg>\n\n                    </span>\n                  </a>\n                ) : (\n                    <div className={styles.record_controller}>\n                      <a\n                        onClick={e => this.stopRecording(e)}\n                        href=\" #\"\n                        className={`${styles.icons} ${styles.stop}`}\n                      >\n                        <span className={styles.stop_icon}></span>\n                        {/* <img src={stopIcon} width={20} height={20} alt=\"Stop icons\" /> */}\n\n                        {/* <span className={`${styles.icons} ${styles.FaStop}`}></span> */}\n                      </a>\n                      <a\n                        onClick={\n                          !pauseRecord\n                            ? e => this.handleAudioPause(e)\n                            : e => this.handleAudioStart(e)\n                        }\n                        href=\" #\"\n                        className={`${styles.icons} ${styles.pause}`}\n                      >\n                        {pauseRecord ?\n                          <span className={styles.play_icons}></span> :\n                          <span className={styles.pause_icons}></span>}\n                      </a>\n                    </div>\n                  )}\n              </div>\n            ) : (\n                <p style={{ color: \"#fff\", marginTop: 30, fontSize: 25 }}>\n                  Seems the site is Non-SSL\n                </p>\n              )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Recorder;\n\nRecorder.defaultProps = {\n  hideHeader: false\n}\n"],"names":["require","audioType","Recorder","props","state","time","seconds","recording","medianotFound","audios","audioBlob","timer","startTimer","bind","countDown","handleAudioPause","e","preventDefault","clearInterval","mediaRecorder","pause","setState","pauseRecord","handleAudioStart","resume","setInterval","secondsToTime","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","h","m","s","componentDidMount","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","audio","stream","MediaRecorder","chunks","ondataavailable","data","size","push","console","log","startRecording","start","stopRecording","stop","saveAudio","handleReset","blob","Blob","type","audioURL","window","URL","createObjectURL","handleAudioStop","url","duration","render","showUIAudio","title","React","styles","recorder_library_box","recorder_box","recorder_box_inner","hideHeader","reco_header","h2","close_icons","record_section","btn_wrapper","handleAudioUpload","btn","upload_btn","clear_btn","duration_section","audio_section","mins","undefined","divider","help","mic_icon","microphone_icon_sec","mic_icon_svg","record_controller","icons","stop_icon","play_icons","pause_icons","color","marginTop","fontSize","Component","defaultProps"],"mappings":"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"}